//  https://gitee.com/renrenio/renren-fast.git

plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

group 'io.renren'
version '3.0.0'

sourceCompatibility = targetJavaVersion
targetCompatibility = targetJavaVersion

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'


configurations {
    all*.exclude group: 'commons-logging'
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
}

ext {
    spring_boot_version = "2.2.4.RELEASE"

    mybatisplus_version = "3.3.1"
    mysql_version = "8.0.17"
    mssql_version = "4.0"
    oracle_version = "11.2.0.3"
    druid_version = "1.1.13"
    quartz_version = "2.3.0"
    commons_lang_version = "2.6"
    commons_fileupload_version = "1.2.2"
    commons_io_version = "2.5"
    commons_codec_version = "1.10"
    commons_configuration_version = "1.10"
    shiro_version = "1.4.0"
    jwt_version = "0.7.0"
    kaptcha_version = "0.0.9"
    qiniu_version = "7.2.23"
    aliyun_oss_version = "2.8.3"
    qcloud_cos_version = "4.4"
    swagger_version = "2.7.0"
    joda_time_version = "2.9.9"
    gson_version = "2.8.5"
    fastjson_version = "1.2.72"
    hutool_version = "4.1.1"

    lombok_version = "1.18.12"
}

dependencies {
    implementation(platform('org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE')) {
        exclude group: "mysql", module: "mysql-connector-java"
    }

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework:spring-context-support"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation ("com.baomidou:mybatis-plus-boot-starter:${mybatisplus_version}"){
        exclude group: "com.baomidou", module: "mybatis-plus-generator"
    }
    implementation "mysql:mysql-connector-java:${mysql_version}"
    implementation "com.oracle:ojdbc6:${oracle_version}"
    implementation "com.microsoft.sqlserver:sqljdbc4:${mssql_version}"
    implementation "org.postgresql:postgresql"
    implementation "com.alibaba:druid-spring-boot-starter:${druid_version}"
    implementation ("org.quartz-scheduler:quartz:${quartz_version}"){
        exclude group: "com.mchange", module: "c3p0"
    }
    implementation "commons-lang:commons-lang:${commons_lang_version}"
    implementation "commons-fileupload:commons-fileupload:${commons_fileupload_version}"
    implementation "commons-io:commons-io:${commons_io_version}"
    implementation "commons-codec:commons-codec:${commons_codec_version}"
    implementation "commons-configuration:commons-configuration:${commons_configuration_version}"
    implementation "org.apache.shiro:shiro-core:${shiro_version}"
    implementation "org.apache.shiro:shiro-spring:${shiro_version}"
    implementation "io.jsonwebtoken:jjwt:${jwt_version}"
    implementation "com.github.axet:kaptcha:${kaptcha_version}"
    implementation "io.springfox:springfox-swagger2:${swagger_version}"
    implementation "io.springfox:springfox-swagger-ui:${swagger_version}"
    implementation "com.qiniu:qiniu-java-sdk:${qiniu_version}"
    implementation "com.aliyun.oss:aliyun-sdk-oss:${aliyun_oss_version}"
    implementation ("com.qcloud:cos_api:${qcloud_cos_version}"){
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }
    implementation "joda-time:joda-time:${joda_time_version}"
    implementation "com.google.code.gson:gson:${gson_version}"
    implementation "com.alibaba:fastjson:${fastjson_version}"
    implementation "cn.hutool:hutool-all:${hutool_version}"

    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"
    testCompileOnly "org.projectlombok:lombok:${lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"

    testCompile "org.springframework.boot:spring-boot-starter-test"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources', 'src/main/webapp']
        }
    }
}

defaultTasks 'clean', 'build'
